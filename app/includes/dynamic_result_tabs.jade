tab(active="[true][0]", ng-controller='kwicCtrl', ng-repeat='queryParams in kwicTabs', select="instance.onentry()", deselect="instance.onexit()")
  tab-heading(ng-class="{not_loading: progress == 100, loading : !instance.hasData}")
    | KWIC

    span(ng-click='kwicTabs.splice($index, 1)', tab-spinner='tab-spinner')
  div(constr='ExampleResults' )
    include kwicresult
tab(ng-repeat='data in graphTabs')
  tab-heading
    | {{'graph' | loc}}
    span(ng-click='graphTabs.splice($index, 1)', tab-spinner='tab-spinner')
  div(ng-controller='graphCtrl', constr='GraphResults')
    .graph_header
      .progress_container
        progress(value='0', max='100')
      .controls
        .form_switch
          input#line_input(type='radio', name='form_switch', value='line', checked='checked')
          label(for='line_input') Linje
          input#bar_input(type='radio', name='form_switch', value='bar')
          label(for="bar_input") Stapel
        label.smoothing_label(for='smoothing_switch') Utj√§mna
        input#smoothing_switch.smoothing_switch(type='checkbox')
        .non_time_div
          span(rel='localize[non_time_before]')
          span.non_time
          span(rel='localize[non_time_after]')
      .legend
      div(style='clear: both;')
    .chart
    .zoom_slider
tab(active="[true][0]", ng-repeat='promise in compareTabs', ng-controller='compareCtrl')
  tab-heading.compare_tab(ng-class='{loading : loading}')
    | {{'compare_vb' | loc}}
    span(tab-spinner='tab-spinner', ng-click='compareTabs.splice($index, 1)')
  .compare_result(ng-class='{loading : loading}')
    .column.column_1
      h2
        | {{'compare_distinctive' | loc}} 
        em {{cmp1.label}}
      ul
        li(ng-repeat='tuple in tables.negative', ng-click="rowClick(tuple, 0)")
          .meter(meter='tuple', max='max[1]', stringify='stringify')
    .column.column_2
      h2
        | {{'compare_distinctive' | loc}} 
        em {{cmp2.label}}
      ul
        li(ng-repeat='tuple in tables.positive', ng-click="rowClick(tuple, 1)")
          .meter(meter='tuple', max='max[1]', stringify='stringify')